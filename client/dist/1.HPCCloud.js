(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./src/workflows/openfoam/helmholtz/index-es5.js":
/*!*******************************************************!*\
  !*** ./src/workflows/openfoam/helmholtz/index-es5.js ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getAsyncModule = exports[\"default\"] = void 0;\nvar _default = module; // export const getAsyncModule = async () => module;\n\nexports[\"default\"] = _default;\n\nvar getAsyncModule = /*#__PURE__*/function () {\n  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n    var loadRemoteComponent, HelloWorld;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loadRemoteComponent = /*#__PURE__*/function () {\n              var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(url) {\n                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", fetch(url).then(function (res) {\n                          return res.text();\n                        }).then(function (source) {\n                          var exports = {};\n\n                          function require(name) {\n                            if (name == 'react') return React;else throw \"You can't use modules other than \\\"react\\\" in remote component.\";\n                          }\n\n                          var transformedSource = Babel.transform(source, {\n                            presets: ['react', 'es2015', 'stage-2']\n                          }).code;\n                          eval(transformedSource);\n                          return exports.__esModule ? exports[\"default\"] : exports;\n                        }));\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function loadRemoteComponent(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            _context2.next = 3;\n            return loadRemoteComponent('https://raw.githubusercontent.com/dealenx/hpccloud-kemsu/new-workflow/client/src/workflows/openfoam/helmholtz/components/steps/Introduction/HelloWorld.js');\n\n          case 3:\n            HelloWorld = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              name: 'OpenFoam - Helmholtz',\n              // logo,\n              requiredAttachments: {\n                project: [],\n                simulation: []\n              },\n              config: {\n                cluster: {\n                  'config.openfoam.enable': {\n                    type: 'bool',\n                    label: 'OpenFoam enabled',\n                    description: 'Check if the cluster is able to run OpenFoam simulation'\n                  }\n                }\n              },\n              steps: {\n                _order: ['Introduction' // 'Input',\n                // 'Simulation',\n                // 'Visualization',\n                ],\n                _disabled: ['Visualization'],\n                _initial_state: {\n                  Introduction: {\n                    type: 'input',\n                    metadata: {\n                      alwaysAvailable: true\n                    }\n                  } // Input: {\n                  //   type: 'input',\n                  //   metadata: {},\n                  // },\n                  // Simulation: {\n                  //   type: 'output',\n                  //   metadata: {},\n                  // },\n                  // Visualization: {\n                  //   type: 'output',\n                  //   metadata: {},\n                  // },\n\n                },\n                Introduction: {\n                  \"default\": null\n                } // Input: {\n                //   default: stepInput,\n                // },\n                // Simulation: {\n                //   default: stepSimulationStart,\n                //   run: stepSimulationView,\n                // },\n                // Visualization: {\n                //   default: stepVisualizationStart,\n                //   run: stepVisualizationView,\n                // },\n\n              },\n              taskFlows: {\n                Simulation: 'hpccloud.taskflow.openfoam.helmholtz.OpenFOAMTaskFlow',\n                Visualization: 'hpccloud.taskflow.paraview.visualizer.ParaViewTaskFlow'\n              },\n              primaryJobs: {\n                Simulation: 'openfoam_run',\n                Visualization: 'paraview'\n              },\n              labels: {\n                Introduction: {\n                  \"default\": 'Introduction'\n                } // Input: {\n                //   default: 'Dataset selection',\n                // },\n                // Simulation: {\n                //   default: 'Simulation',\n                //   run: 'Simulation (running)',\n                // },\n                // Visualization: {\n                //   default: 'Visualization',\n                //   run: 'Visualization (running)',\n                // },\n\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getAsyncModule() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getAsyncModule = getAsyncModule;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./src/workflows/openfoam/helmholtz/index-es5.js?");

/***/ })

}]);