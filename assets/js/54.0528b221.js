(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{352:function(t,e,a){"use strict";a.r(e);var s=a(33),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"simput-разработка-кейса-дnя-задачи-о-течении-в-каверне"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simput-разработка-кейса-дnя-задачи-о-течении-в-каверне"}},[t._v("#")]),t._v(" Simput разработка кейса для задачи о течении в каверне")]),t._v(" "),a("h2",{attrs:{id:"подготовка"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#подготовка"}},[t._v("#")]),t._v(" Подготовка")]),t._v(" "),a("p",[t._v("Настройка Simput")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ cd simput-kemsu\n$ nvm use 10\n$ npm install\n$ npm run build\n$ npm link\n$ Simput\n\n  Usage: Simput [options]\n\n  Options:\n\n    -h, --help                    output usage information\n    -V, --version                 output the version number\n\n    -i, --input [file|directory]  Input file or directory\n    -o, --output [directory]      Output directory to output to\n    -t, --type [type]             Type of input\n\n    --no-gui                      Just generate output\n    -s, --silent                  Do not open the browser\n\n    -c, --compile [directory]     Directory to compile files\n    -m, --minify                  Minify compiled file\n    -a, --add [file]              Add model to list of available inputs\n    -l, --list                    List model types of available as inputs\n    -r, --remove [type]           Remove model to list of available inputs\n")])])]),a("h2",{attrs:{id:"подготовка-кейса-openfoam-cavity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#подготовка-кейса-openfoam-cavity"}},[t._v("#")]),t._v(" Подготовка кейса openfoam_cavity")]),t._v(" "),a("h4",{attrs:{id:"добавnение-кейса-в-список-simput"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#добавnение-кейса-в-список-simput"}},[t._v("#")]),t._v(" Добавление кейса в список Simput:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd types/openfoam_cavity\nSimput -c src/ -o versions/ -t openfoam_cavity\nSimput -a versions/openfoam_cavity.js\n")])])]),a("h4",{attrs:{id:"разработка-формы-кейса"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#разработка-формы-кейса"}},[t._v("#")]),t._v(" Разработка формы кейса:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Simput -t openfoam_cavity -o ~/simput_models/openfoam_cavity -p 9999\n")])])]),a("p",[t._v("Открываем в браузере "),a("code",[t._v("localhost:9999")])]),t._v(" "),a("h4",{attrs:{id:"создание-dist-файnов"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#создание-dist-файnов"}},[t._v("#")]),t._v(" Создание dist-файлов")]),t._v(" "),a("p",[t._v("Переходим в корневую папку Simput и выполняем следующую команду:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Simput -mc types/openfoam_cavity/src/ -t openfoam_cavity -o dist/types\n")])])]),a("p",[t._v("Потом перейти в директорию hpccloud-kemsu")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ cd ../hpccloud-kemsu\n$ npm run install:simput\n#or npm run install:openfoam_cavity\n")])])]),a("h4",{attrs:{id:"добавnение-поддержки-типа-в-hpccloud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#добавnение-поддержки-типа-в-hpccloud"}},[t._v("#")]),t._v(" Добавление поддержки типа в HPCCloud")]),t._v(" "),a("p",[t._v("dist/index.html")]),t._v(" "),a("p",[t._v("Находим:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('...\n        <script src="simput-openfoam-tutorials.js" type="text/javascript"><\/script>\n        <script src="simput-openfoam-windtunnel.js" type="text/javascript"><\/script>\n        <script src="HPCCloud.js" type="text/javascript"><\/script>\n        <script type="text/javascript">\n            HPCCloud.configure();\n        <\/script>\n')])])]),a("p",[t._v("Добавляем следующее после скрипта "),a("code",[t._v("simput-openfoam-windtunnel.js")]),t._v(" и добавляем скрипт с "),a("code",[t._v("simput-openfoam_cavity.js")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n...\n        <script src="simput-openfoam-tutorials.js" type="text/javascript"><\/script>\n        <script src="simput-openfoam-windtunnel.js" type="text/javascript"><\/script>\n        <script src="simput-openfoam_cavity.js" type="text/javascript"><\/script> \x3c!--- Подключили скрипт ---\x3e\n\n        <script src="HPCCloud.js" type="text/javascript"><\/script>\n        <script type="text/javascript">\n            HPCCloud.configure();\n        <\/script>\n')])])]),a("p",[t._v("Так как мы пока отталкиваемся от кейса openfoam-tutorials, то копируем этот кейс для каверны:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cp -R src/workflows/openfoam/tutorials src/workflows/openfoam/cavity\n")])])]),a("p",[t._v("В "),a("code",[t._v("src/workflows/openfoam/cavity/index.js")]),t._v(" меняем описание кейса:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\nexport default {\n  name: 'OpenFoam - Cavity example',\n  logo,\n  requiredAttachments: {\n    project: [],\n    simulation: [],\n  },\n...\n")])])]),a("p",[t._v("А так же в этом же файле ниже переименовываем в значение с "),a("code",[t._v("tutorial")]),t._v(" на "),a("code",[t._v("cavity")]),t._v(" поля Simulation :")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\ntaskFlows: {\n    Simulation: 'hpccloud.taskflow.openfoam.cavity.OpenFOAMTaskFlow',\n    Visualization: 'hpccloud.taskflow.paraview.visualizer.ParaViewTaskFlow',\n  },\n...\n")])])]),a("p",[t._v("Стоит отметить, что позже мы добавим на серверной части taskflow на серверной части, а пока изменяем значения в клиентской части.")]),t._v(" "),a("p",[t._v("В файле "),a("code",[t._v("src/workflows/openfoam/tutorials/components/steps/Input/index.js")]),t._v(" меняем "),a("code",[t._v("tutorials")]),t._v(" на "),a("code",[t._v("cavity")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\nexport default (props) => (\n  <SimputReact\n    {...props}\n    simputType=\"openfoam_cavity\"\n    inputFileKeys={[{ key: 'sh', name: 'run.sh', parse: false }]}\n    initialDataModel={{\n      data: {},\n      type: 'openfoam_cavity',\n      hideViews: [],\n    }}\n  />\n);\n\n")])])]),a("p",[t._v("Импортируем настроенный workflow-компонент в файле "),a("code",[t._v("src/workflows/index.js")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nimport NWChem from './nwchem/nwchem-simput';\nimport NWChemExec from './nwchem/nwchem-exec';\nimport NWChemNeb from './nwchem/nwchem-neb';\nimport OpenFOAMTutorial from './openfoam/tutorials';\nimport OpenFOAMWindTunnel from './openfoam/windtunnel';\nimport OpenFOAMCavity from './openfoam/cavity';\nimport PyFr from './pyfr';\nimport Visualizer from './visualizer';\n\nconst Workflows = {\n  NWChem,\n  NWChemExec,\n  NWChemNeb,\n  OpenFOAMTutorial,\n  OpenFOAMWindTunnel,\n  OpenFOAMCavity,\n  PyFr,\n  Visualizer,\n};\n...\n\n")])])]),a("p",[t._v("После того, как подключили, компилируем клиентскую часть:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("nvm use 10\nnpm run build\n")])])]),a("p",[t._v("Проверяем добавленный кейс:\n"),a("img",{attrs:{src:"https://snipboard.io/IOlfVJ.jpg",alt:"img"}})]),t._v(" "),a("p",[t._v("Создаем проект:\n"),a("img",{attrs:{src:"https://snipboard.io/uTfoSy.jpg",alt:"img"}})]),t._v(" "),a("p",[t._v("После создаем в этом проекте моделирование, проверяем, что форма кейса подгружается:\n"),a("img",{attrs:{src:"https://snipboard.io/JZGbLE.jpg",alt:"img"}})]),t._v(" "),a("p",[t._v("Но запускать моделирование нет смысла, так как еще не подготовлена серверная часть, поэтому следующим шагом займемся добавлением необходимых файлов.")]),t._v(" "),a("h2",{attrs:{id:"поддержка-на-серверной-стороне"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#поддержка-на-серверной-стороне"}},[t._v("#")]),t._v(" Поддержка на серверной стороне")]),t._v(" "),a("p",[t._v("Копируем taskflow:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cp -R server/taskflows/hpccloud/taskflow/openfoam/tutorial.py server/taskflows/hpccloud/taskflow/openfoam/cavity.py\n")])])]),a("p",[t._v("Пересобираем docker-контейнеры:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker-compose build girder command monitor\n")])])]),a("h2",{attrs:{id:"разработка-формы-кейса-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#разработка-формы-кейса-2"}},[t._v("#")]),t._v(" Разработка формы кейса")]),t._v(" "),a("p",[t._v("Пример уже реализованного кейса каверны можно посмотреть "),a("a",{attrs:{href:"https://github.com/dealenx/simput-kemsu/tree/706b1fb1bf751cf5eaca3a6c4cc26a37b4d75ca7/types/openfoam_cavity",target:"_blank",rel:"noopener noreferrer"}},[t._v("здесь"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Необходима следующая структура файлов:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/src")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/lang")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/[language]")]),t._v(' например. "en", "fr"\n'),a("ul",[a("li",[a("code",[t._v("label.json")]),t._v(", метки атрибутов и свойств.")]),t._v(" "),a("li",[a("code",[t._v("/help")]),t._v(", сообщения полей , "),a("em",[t._v("recommended, not required")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/[folders for each attribute]")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("[file for each property, contents are html]")])])])])])])])])])]),t._v(" "),a("li",[a("code",[t._v("/templates")]),t._v(" "),a("ul",[a("li",[t._v("[файлы шаблонов]")])])]),t._v(" "),a("li",[a("code",[t._v("model.js")]),t._v(", модель с массивом полей кейса.")]),t._v(" "),a("li",[a("code",[t._v("convert.js")]),t._v(", конвертирует модель в выходные файлы .")])])]),t._v(" "),a("li",[a("code",[t._v("/samples")]),t._v(", пустые или заполненные примеры файлов; "),a("em",[t._v("recommended, not required")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("/versions")]),t._v(", выходная папка для скомпилированного типа; "),a("em",[t._v("recommended, not required")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("README.md")]),t._v(", Описание кейса; "),a("em",[t._v("recommended, not required")]),t._v(".")])])])}),[],!1,null,null,null);e.default=n.exports}}]);