(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{375:function(t,e,s){"use strict";s.r(e);var a=s(33),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"workflow-pages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workflow-pages"}},[t._v("#")]),t._v(" Workflow pages")]),t._v(" "),s("p",[t._v("Each workflow has a set of steps, those steps have pages associated with them. For most cases there are at least two pages:")]),t._v(" "),s("ul",[s("li",[t._v("Input, a Simput panel for modifiying or creating the simulation input.")]),t._v(" "),s("li",[t._v("Submission, starts the job")]),t._v(" "),s("li",[t._v("Monitor, monitors the job")])]),t._v(" "),s("p",[t._v("These pages can be built off the components in:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("src/workflows/generic/components/steps\n")])])]),s("h2",{attrs:{id:"input"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" Input")]),t._v(" "),s("p",[t._v("Import the component "),s("code",[t._v("generic/components/steps/SimputReact")]),t._v(" and pass the following props:")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("simputType")]),t._v(", the name of the simput type")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("initialDataModel")]),t._v(", the initial data model for simput. Of format:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("simput_type_name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    hideViews"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// strings of the view names you would like to hide")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("simputModelDecorator")]),t._v(", a function which takes model and props and extends the data model if desired.")])])]),t._v(" "),s("h2",{attrs:{id:"submission"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission"}},[t._v("#")]),t._v(" Submission")]),t._v(" "),s("p",[t._v("Submit a taskflow to a cluster or EC2 instance. You can provision EC2 clusters and volumes from the forms on this panel. Import component `generic/components/steps/JobSubmission' and pass the following props:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("addOn")]),t._v(", a form addon to pass extra parameters to the cluster")]),t._v(" "),s("li",[s("code",[t._v("actionList")]),t._v(", potential actions for the form, for the Submission step it's usually just a start simulation action.")]),t._v(" "),s("li",[s("code",[t._v("clusterFilter")]),t._v(", a function which takes a cluster and returns a boolean whether or not it should be included in the list to be run.")]),t._v(" "),s("li",[s("code",[t._v("getPayload")]),t._v(", a function which takes "),s("code",[t._v("props")]),t._v(" and "),s("code",[t._v("state")]),t._v(" and returns a payload for the taskflow.")]),t._v(" "),s("li",[s("code",[t._v("{ ...props }")]),t._v(" Inherit any props comming from the parent componnent.")]),t._v(" "),s("li",[t._v("You can pass more props throgh the redux connect function.")])]),t._v(" "),s("h2",{attrs:{id:"monitor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monitor"}},[t._v("#")]),t._v(" Monitor")]),t._v(" "),s("p",[t._v("Monitor and keep track of the running taskflow with its jobs and tasks. Import "),s("code",[t._v("generic/components/steps/JobMonitoring")]),t._v(" and provide the following props through the redux connect function (which takes "),s("code",[t._v("state")]),t._v(").")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("getActions")]),t._v(", a function which takes props and gets the actions available in the taskflow.")]),t._v(" "),s("li",[s("code",[t._v("taskflow")]),t._v(", the current state taskflow for the active project")]),t._v(" "),s("li",[s("code",[t._v("taskflowId")]),t._v(", the id of the current taskflow")]),t._v(" "),s("li",[s("code",[t._v("cluster")]),t._v(", the cluster of the currently running taskflow")]),t._v(" "),s("li",[s("code",[t._v("disabledButtons")]),t._v(",  getDisabledButtons(state.network, taskflow),")]),t._v(" "),s("li",[s("code",[t._v("error")]),t._v(", use the utility function "),s("code",[t._v("getNetworkError(state, ['terminate_taskflow', 'delete_taskflow'])")]),t._v(", this will show any errors that "),s("code",[t._v("delete_taskflow")]),t._v(" or "),s("code",[t._v("terminate_taskflow")]),t._v(" should emit. You can have it catch more errors by checking the tag that the network call uses in the redux stack.")]),t._v(" "),s("li",[s("code",[t._v("actionFunctions")]),t._v(", additional actions, usually to take the user to the next step in the workflow.")])]),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("p",[t._v("You can find an example of each of these steps in the PyFR workflow at "),s("code",[t._v("src/workflows/pyfr")])])])}),[],!1,null,null,null);e.default=o.exports}}]);