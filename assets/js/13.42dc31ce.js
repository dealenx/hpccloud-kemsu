(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{366:function(t,s,a){"use strict";a.r(s);var r=a(33),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"панеnи-panels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#панеnи-panels"}},[t._v("#")]),t._v(" Панели (Panels)")]),t._v(" "),a("p",[t._v("Панели - это React-компоненты, которые переиспользуются во многих разделах.")]),t._v(" "),a("h2",{attrs:{id:"вnоженность"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#вnоженность"}},[t._v("#")]),t._v(" Вложенность")]),t._v(" "),a("p",[t._v("Благодаря возможности переиспользования панелей, то они могут стать очень многоуровневыми. На изображении ниже показана вложенность панелей в компоненте workflow.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/hpccloud-kemsu/development__images/form-panels.png?style=centerme",alt:"Alt"}})]),t._v(" "),a("center",{staticStyle:{margin:"0px 0px 25px"}},[a("i",[t._v("Вложенность панели")])]),t._v(" "),a("p",[t._v("Каждая панель здесь представляет из себя форму, данные в каждой подчиненной форме передаются ей родительским компонентом и при изменении с помощью функции onChange возвращают обратно.")]),t._v(" "),a("h2",{attrs:{id:"основные-панеnи"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#основные-панеnи"}},[t._v("#")]),t._v(" Основные панели")]),t._v(" "),a("h3",{attrs:{id:"buttonbar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buttonbar"}},[t._v("#")]),t._v(" "),a("code",[t._v("ButtonBar")])]),t._v(" "),a("p",[a("code",[t._v("ButtonBar")]),t._v(", используемый в других панелях, принимает список действий, которые компонент отображает кнопку на их действие. Он также может принимать дочерний элемент, который будет отображаться справа от кнопок. Дочерний элемент обычно используется для отображения ошибок.")]),t._v(" "),a("h3",{attrs:{id:"activelist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activelist"}},[t._v("#")]),t._v(" "),a("code",[t._v("ActiveList")])]),t._v(" "),a("p",[t._v("Список элементов, которые может выбрать пользователь.")]),t._v(" "),a("h3",{attrs:{id:"jobmonitor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jobmonitor"}},[t._v("#")]),t._v(" "),a("code",[t._v("JobMonitor")])]),t._v(" "),a("p",[t._v("В основном используется в рабочих процессах (workflows) для просмотра процессов и статуса моделирования.")]),t._v(" "),a("h3",{attrs:{id:"toolbar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#toolbar"}},[t._v("#")]),t._v(" "),a("code",[t._v("Toolbar")])]),t._v(" "),a("p",[t._v("Это панель инструментов под верхним заголовком. Он содержит компонент Breadcrumb (хлебные крошки) и принимает заголовок и действия, как параметры, которые отображаются по центру и справа.")]),t._v(" "),a("h3",{attrs:{id:"run-runclusterform-runec2form"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-runclusterform-runec2form"}},[t._v("#")]),t._v(" "),a("code",[t._v("Run / RunClusterForm / RunEC2Form")])]),t._v(" "),a("p",[t._v("Корневой компонент «Run» определяет, какую форму отображать: форма RunClusterForm или RunEC2. Эта панель используется на этапе запуска рабочих процессов.")]),t._v(" "),a("h3",{attrs:{id:"runtimebackend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runtimebackend"}},[t._v("#")]),t._v(" "),a("code",[t._v("RuntimeBackend")])]),t._v(" "),a("p",[t._v("В этой панели представлены настройки серверной части для CUDA, OpenCL и OpenMP. Для CUDA он устанавливает идентификатор устройства на Round Robin или Local Rank. Для OpenMP и OpenCL вы можете выбрать профиль кластера, который вы можете настроить на странице Cluster Preferences.")]),t._v(" "),a("h3",{attrs:{id:"schedulerconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#schedulerconfig"}},[t._v("#")]),t._v(" "),a("code",[t._v("SchedulerConfig")])]),t._v(" "),a("p",[t._v("Для каждого планировщика задач PBS, SGE и SLURM описан набор полей, которые требуются им.")]),t._v(" "),a("p",[t._v("По умолчанию:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sge"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maxWallTime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hours"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minutes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"seconds"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"defaultQueue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sge"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfGpusPerNode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfSlots"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"slurm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfGpusPerNode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfCoresPerNode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfNodes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pbs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfGpusPerNode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfCoresPerNode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfNodes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Эта панель используется на начальном этапе моделирования и в разделе настройки кластеров.")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);