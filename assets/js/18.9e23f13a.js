(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{351:function(t,s,e){"use strict";e.r(s);var a=e(33),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"panels"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#panels"}},[t._v("#")]),t._v(" Panels")]),t._v(" "),e("p",[t._v("Panels are React components which are used in more than one place. These are as opposed to pages which are added once to the React-Router config, and contain Panels.")]),t._v(" "),e("h2",{attrs:{id:"nesting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nesting"}},[t._v("#")]),t._v(" Nesting")]),t._v(" "),e("p",[t._v("With the reusability of panels they can get very nested. The image below illustrates panel nesting within a workflow step component.")]),t._v(" "),e("p",[e("img",{attrs:{src:"/development__images/form-panels.png",alt:"form panels"}})]),t._v(" "),e("p",[t._v("Each panel here is a form, the data in each subform is passed to it by the parent component and bubbles up on a change though an onChange function.")]),t._v(" "),e("h2",{attrs:{id:"common-panels"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-panels"}},[t._v("#")]),t._v(" Common panels")]),t._v(" "),e("h3",{attrs:{id:"buttonbar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#buttonbar"}},[t._v("#")]),t._v(" "),e("code",[t._v("ButtonBar")])]),t._v(" "),e("p",[t._v("Used in other panels, "),e("code",[t._v("ButtonBar")]),t._v(" takes a list of actions which it renders as buttons. It can also take a child element which it will display the the right of the buttons. The child element is typically used to display errors.")]),t._v(" "),e("h3",{attrs:{id:"activelist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#activelist"}},[t._v("#")]),t._v(" "),e("code",[t._v("ActiveList")])]),t._v(" "),e("p",[t._v("A list of elements the user can select.")]),t._v(" "),e("h3",{attrs:{id:"jobmonitor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jobmonitor"}},[t._v("#")]),t._v(" "),e("code",[t._v("JobMonitor")])]),t._v(" "),e("p",[t._v("This is primarily used in workflows to view the progress and status of a simulation.")]),t._v(" "),e("h3",{attrs:{id:"toolbar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#toolbar"}},[t._v("#")]),t._v(" "),e("code",[t._v("Toolbar")])]),t._v(" "),e("p",[t._v("This is the toolbar just below the top most header. It contains a Breadcrumb component, and takes title and actions as properties which are rendered center and right respectively.")]),t._v(" "),e("h3",{attrs:{id:"run-runclusterform-runec2form"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-runclusterform-runec2form"}},[t._v("#")]),t._v(" "),e("code",[t._v("Run / RunClusterForm / RunEC2Form")])]),t._v(" "),e("p",[t._v("The root component 'Run' determines which form to render, either RunClusterForm or RunEC2 form. This panel is used in the Start step of workflows.")]),t._v(" "),e("h3",{attrs:{id:"runtimebackend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runtimebackend"}},[t._v("#")]),t._v(" "),e("code",[t._v("RuntimeBackend")])]),t._v(" "),e("p",[t._v("This panel presents backend settings for CUDA, OpenCL, and OpenMP. For CUDA it sets the device id to Round Robin or Local Rank. For OpenMP and OpenCL you can select a cluster profile which you can configure for a cluster on the Cluster Preferences page.")]),t._v(" "),e("h3",{attrs:{id:"schedulerconfig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#schedulerconfig"}},[t._v("#")]),t._v(" "),e("code",[t._v("SchedulerConfig")])]),t._v(" "),e("p",[t._v("For each scheduler PBS, SGE, and SLURM it renders a set of form fields that the scheduler requires. The default of these forms is:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sge"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maxWallTime"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hours"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minutes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"seconds"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"defaultQueue"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sge"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfGpusPerNode"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfSlots"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"slurm"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfGpusPerNode"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfCoresPerNode"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfNodes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pbs"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfGpusPerNode"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfCoresPerNode"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"numberOfNodes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This panel is used on the Start step of simulations and for clusters on the Cluster Preferences page.")])])}),[],!1,null,null,null);s.default=r.exports}}]);