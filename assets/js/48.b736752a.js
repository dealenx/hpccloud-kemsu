(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{361:function(t,e,a){"use strict";a.r(e);var s=a(33),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"simput"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simput"}},[t._v("#")]),t._v(" Simput")]),t._v(" "),a("p",[t._v("Simput is a tool for simplifying the process of writing and editing simulation input files. It can be a standalone tool but for HPCCloud we've integrated it to support input generation for simulations such as PyFR.")]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("h3",{attrs:{id:"parsed-input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsed-input"}},[t._v("#")]),t._v(" Parsed input")]),t._v(" "),a("p",[t._v("If you uploaded a file to the parent project or simulation, and the simulation type is supported by Simput then the input file will be parsed and displayed for editing. Otherwise the fields will be blank and ready for your input.")]),t._v(" "),a("h3",{attrs:{id:"manual-input-for-pyfr-euler-vortex-2d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manual-input-for-pyfr-euler-vortex-2d"}},[t._v("#")]),t._v(" Manual input for PyFR - euler-vortex-2d")]),t._v(" "),a("p",[t._v("This example will lead you through the creation of an input file for PyFR using SimPut. You will create an input file that can be used with one of PyFR's "),a("a",{attrs:{href:"https://github.com/vincentlab/PyFR/blob/develop/examples/euler_vortex_2d/",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("With the steps below you'll create a similar input file to "),a("a",{attrs:{href:"https://github.com/vincentlab/PyFR/blob/develop/examples/euler_vortex_2d/euler_vortex_2d.ini",target:"_blank",rel:"noopener noreferrer"}},[t._v("euler-vortex-2d.ini"),a("OutboundLink")],1),t._v(" in Simput, a few changes have been made to reduce the simulation runtime. Unless mentioned below do not change default values. To begin, create a plain PyFR project and a simulation, for the simulation you will need to uplaod a mesh. Inside the simulation, to the input step and enter the values for each attribute:")]),t._v(" "),a("h3",{attrs:{id:"constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[t._v("#")]),t._v(" Constants")]),t._v(" "),a("ul",[a("li",[t._v("Add three custom constants, the constants names are case-sensitive\n"),a("ul",[a("li",[a("code",[t._v("S = 13.5")])]),t._v(" "),a("li",[a("code",[t._v("M = 0.4")])]),t._v(" "),a("li",[a("code",[t._v("R = 1.5")])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/hpccloud-kemsu/usage__images/custom-consts.png",alt:"custom constants fields"}})]),t._v(" "),a("h3",{attrs:{id:"solver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solver"}},[t._v("#")]),t._v(" Solver")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Settings")])]),t._v(" "),a("ul",[a("li",[t._v("Order = 3")]),t._v(" "),a("li",[t._v("set "),a("em",[t._v("Viscosity Correction")]),t._v(" to the empty option")]),t._v(" "),a("li",[t._v("set "),a("em",[t._v("Shock Capturing")]),t._v(" to the empty option")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Time Integrator")])]),t._v(" "),a("ul",[a("li",[t._v("Initial time = "),a("code",[t._v("0.0")])]),t._v(" "),a("li",[t._v("Final time = "),a("code",[t._v("50.0")])]),t._v(" "),a("li",[t._v("Time step = "),a("code",[t._v("0.005")])])])]),t._v(" "),a("li",[a("p",[t._v("skip over "),a("strong",[t._v("Artificial Viscosity")]),t._v(" and "),a("strong",[t._v("Solver Source Terms")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Interfaces")])]),t._v(" "),a("ul",[a("li",[t._v("clear "),a("em",[t._v("LDG Beta")]),t._v(" and leave it empty.")]),t._v(" "),a("li",[t._v("clear "),a("em",[t._v("LDG Tau")]),t._v(" and leave it empty.")])])])]),t._v(" "),a("h3",{attrs:{id:"solver-interfaces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solver-interfaces"}},[t._v("#")]),t._v(" Solver Interfaces")]),t._v(" "),a("ul",[a("li",[t._v("change "),a("em",[t._v("Type")]),t._v(" to "),a("code",[t._v("Linear")])])]),t._v(" "),a("h3",{attrs:{id:"solver-elements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solver-elements"}},[t._v("#")]),t._v(" Solver Elements")]),t._v(" "),a("ul",[a("li",[t._v("Add one, change nothing")])]),t._v(" "),a("p",[t._v("###Solution")]),t._v(" "),a("p",[t._v("For each of these sections add an item and change the "),a("em",[t._v("Type")]),t._v(" to the section's name."),a("br"),t._v("\nRename the property in the sidebar if desired.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("type: "),a("strong",[t._v("Plugin NaN check")])]),t._v(" "),a("ul",[a("li",[a("em",[t._v("nsteps")]),t._v(" = "),a("code",[t._v("50")])])])]),t._v(" "),a("li",[a("p",[t._v("type: "),a("strong",[t._v("Plugin Writer")])]),t._v(" "),a("ul",[a("li",[a("em",[t._v("Disk write time interval")]),t._v(" = "),a("code",[t._v("10.0")])]),t._v(" "),a("li",[a("em",[t._v("Basedir")]),t._v(" = "),a("code",[t._v(".")])]),t._v(" "),a("li",[a("em",[t._v("Output name pattern")]),t._v(" = "),a("code",[t._v("euler_vortex_2d-{t:.1f}")])])])]),t._v(" "),a("li",[a("p",[t._v("type: "),a("strong",[t._v("ics")])]),t._v(" "),a("ul",[a("li",[a("em",[t._v("Initial Density")]),t._v(" = "),a("code",[t._v("pow(1 - S*S*M*M*(gamma - 1)*exp(2*%(f)s)/(8*pi*pi), 1/(gamma - 1))")])]),t._v(" "),a("li",[a("em",[t._v("Initial X velocity")]),t._v(" = "),a("code",[t._v("S*y*exp(%(f)s)/(2*pi*R)")])]),t._v(" "),a("li",[a("em",[t._v("Initial Y velocity")]),t._v(" = "),a("code",[t._v("1 - S*x*exp(%(f)s)/(2*pi*R)")])]),t._v(" "),a("li",[a("em",[t._v("Initial static pressure dist")]),t._v(" =\n"),a("code",[t._v("1/(gamma*M*M)*pow(1 - S*S*M*M*(gamma - 1)*exp(2*%(f)s)/(8*pi*pi), gamma/(gamma - 1))")])]),t._v(" "),a("li",[t._v("add the helper function: "),a("code",[t._v("f")]),t._v(" and set it to "),a("code",[t._v("((1 - x*x - y*y)/(2*R*R))")])])])])]),t._v(" "),a("p",[t._v("If you've filled in each filed as instructed above go to the simulation step you'll be able to run your simulation with the valid deck file generated by SimPut.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/hpccloud-kemsu/usage__images/simput-complete.png",alt:"ics page of simput when complete"}})]),t._v(" "),a("h2",{attrs:{id:"adding-simulation-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-simulation-types"}},[t._v("#")]),t._v(" Adding simulation types")]),t._v(" "),a("p",[t._v("For instructions on adding simulation types follow "),a("a",{attrs:{href:"https://github.com/Kitware/simput#creating-a-new-simulation-type",target:"_blank",rel:"noopener noreferrer"}},[t._v("these instructions on the Simput Github repository"),a("OutboundLink")],1),t._v(". In Simput be sure to add your type to the "),a("code",[t._v("/dist")]),t._v(" folder and commit the changes.")]),t._v(" "),a("p",[t._v("In HPCCloud, you'll want to have the latest Simput version installed and a new script command "),a("code",[t._v("package.json")]),t._v(" which installs the new type:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("scripts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"install:mytype"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cp ./node_modules/simput/dist/types/mytype.js ./dist/simput-mytype.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Add a script tag which includes the file in "),a("code",[t._v("dist/index.html")]),t._v(" or else the HPCCloud will not detect your type.")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("simput-mytype.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("For the workflow view which contains Simput, adapt the view from "),a("code",[t._v("src/workflows/pyfr/pyfr-simput/components/steps/Input/index.js")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repository"}},[t._v("#")]),t._v(" Repository")]),t._v(" "),a("p",[t._v("Simput is fully open source and available at "),a("a",{attrs:{href:"https://github.com/Kitware/simput",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/Kitware/simput"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);